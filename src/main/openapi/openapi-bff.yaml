---
openapi: 3.0.3
info:
  title: onecx-data-orchestrator-bff
  description: Backend-For-Frontend (BFF) service for Kubernetes. This API provides endpoints to custom resources (CRD) of Kubernetes
  version: 1.0.0
servers:
  - url: "http://onecx-data-orchestrator-bff:8080"
tags:
  - name: data
    description: Managing Custom Resources of Kubernetes
paths:
  /crd:
    post:
      x-onecx:
        permissions:
          crd:
            - read
      tags:
        - data
      description: Search for custom resources by criteria
      operationId: getCustomResourcesByCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrdSearchCriteria'
      responses:
        "200":
          description: Custom resource search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrdResponse'
        "404":
          description: Not found
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /crd/edit:
    post:
      x-onecx:
        permissions:
          crd:
            - write
      tags:
        - data
      description: Update data of a specific custom resource
      operationId: editCrd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditResourceRequest'
      responses:
        "200":
          description: Custom resource updated successfully
        "404":
          description: Custom resource not found
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /crd/{type}/{name}:
    get:
      x-onecx:
        permissions:
          crd:
            - read
      tags:
        - data
      description: Get a custom resource by its type and name
      operationId: getCrdByTypeAndName
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContextKind'
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Custom resource retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCRDResponse'
        "404":
          description: Custom resource not found
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          crd:
            - touch
      tags:
        - data
      description: Touch a custom resource by its type and name to trigger a re-deployment
      operationId: touchCrdByNameAndType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContextKind'
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Custom resource touched successfully
        "404":
          description: Custom resource not found
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /crd/kinds:
    get:
      x-onecx:
        permissions:
          crd:
            - read
      tags:
        - data
      description: Get a list of all custom resource types
      operationId: getActiveCrdKinds
      responses:
        "200":
          description: Custom resource types retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContextKindsResponse'
components:
  schemas:
    GetCRDResponse:
      type: object
      properties:
        crd:
          type: object
    CrdSearchCriteria:
      type: object
      properties:
        name:
          type: string
        type:
          type: array
          items:
            $ref: '#/components/schemas/ContextKind'

    GenericCrd:
      type: object
      allOf:
        - $ref: '#/components/schemas/Status'
      properties:
        kind:
          type: string
        resourceVersion:
          type: string
        version:
          type: string
        creationTimestamp:
          type: string
        lastModified:
          type: string
        name:
          type: string

    EditResourceRequest:
      type: object
      properties:
        CrdData:
          $ref: '#/components/schemas/CustomResourceData'
        CrdDatabase:
          $ref: '#/components/schemas/CustomResourceDatabase'
        CrdKeycloakClient:
          $ref: '#/components/schemas/CustomResourceKeycloakClient'
        CrdMicrofrontend:
          $ref: '#/components/schemas/CustomResourceMicrofrontend'
        CrdMicroservice:
          $ref: '#/components/schemas/CustomResourceMicroservice'
        CrdPermission:
          $ref: '#/components/schemas/CustomResourcePermission'
        CrdProduct:
          $ref: '#/components/schemas/CustomResourceProduct'
        CrdSlot:
          $ref: '#/components/schemas/CustomResourceSlot'
        CrdParameter:
          $ref: '#/components/schemas/CustomResourceParameter'
    CrdResponse:
      type: object
      properties:
        customResources:
          type: array
          items:
            $ref: '#/components/schemas/GenericCrd'
    CustomResourceData:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            appId:
              type: string
            data:
              type: string
            description:
              type: string
            key:
              type: string
            orgId:
              type: string
            productName:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'

    CustomResourceDatabase:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            extensions:
              items:
                type: string
              type: array
            host:
              type: string
            name:
              type: string
            password-key:
              type: string
            password-secrets:
              type: string
            schema:
              type: string
            user:
              type: string
            user-search-path:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
    CustomResourceKeycloakClient:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            kcConfig:
              properties:
                attributes:
                  additionalProperties:
                    type: string
                  type: object
                bearerOnly:
                  type: boolean
                clientAuthenticatorType:
                  type: string
                clientId:
                  type: string
                defaultClientScopes:
                  items:
                    type: string
                  type: array
                description:
                  type: string
                directAccessGrantsEnabled:
                  type: boolean
                enabled:
                  type: boolean
                implicitFlowEnabled:
                  type: boolean
                optionalClientScopes:
                  items:
                    type: string
                  type: array
                password:
                  type: string
                protocol:
                  type: string
                publicClient:
                  type: boolean
                redirectUris:
                  items:
                    type: string
                  type: array
                serviceAccountsEnabled:
                  type: boolean
                standardFlowEnabled:
                  type: boolean
                webOrigins:
                  items:
                    type: string
                  type: array
              type: object
            passwordKey:
              type: string
            passwordSecrets:
              type: string
            realm:
              type: string
            type:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'

    CustomResourceMicrofrontend:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            appId:
              type: string
            appName:
              type: string
            appVersion:
              type: string
            classifications:
              items:
                type: string
              type: array
            contact:
              type: string
            deprecated:
              type: boolean
            description:
              type: string
            endpoints:
              items:
                properties:
                  name:
                    type: string
                  path:
                    type: string
                type: object
              type: array
            exposedModule:
              type: string
            iconName:
              type: string
            note:
              type: string
            productName:
              type: string
            remoteBaseUrl:
              type: string
            remoteEntry:
              type: string
            remoteName:
              type: string
            tagName:
              type: string
            technology:
              type: string
            type:
              enum:
                - COMPONENT
                - MODULE
              type: string
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'

    CustomResourceMicroservice:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            appId:
              type: string
            description:
              type: string
            name:
              type: string
            productName:
              type: string
            type:
              type: string
            version:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
    CustomResourcePermission:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            appId:
              type: string
            description:
              type: string
            name:
              type: string
            permissions:
              additionalProperties:
                additionalProperties:
                  type: string
                type: object
              type: object
            productName:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
    CustomResourceProduct:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            basePath:
              type: string
            classifications:
              items:
                type: string
              type: array
            description:
              type: string
            displayName:
              type: string
            iconName:
              type: string
            imageUrl:
              type: string
            name:
              type: string
            provider:
              type: string
            version:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'

    CustomResourceSlot:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            appId:
              type: string
            deprecated:
              type: boolean
            description:
              type: string
            name:
              type: string
            productName:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'

    CustomResourceParameter:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        spec:
          properties:
            applicationId:
              type: string
            key:
              type: string
            orgId:
              type: string
            parameters:
              additionalProperties:
                properties:
                  description:
                    type: string
                  displayName:
                    type: string
                  value:
                    type: string
                type: object
              type: object
            productName:
              type: string
            url:
              type: string
          type: object
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
    Metadata:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        resourceVersion:
          type: string
        creationTimestamp:
          type: string
    Status:
      type: object
      properties:
          message:
            type: string
          responseCode:
            type: integer
          status:
            enum:
              - CREATED
              - ERROR
              - UNDEFINED
              - UPDATED
            type: string
    GetContextKindsResponse:
      type: object
      properties:
        kinds:
          type: array
          items:
            $ref: '#/components/schemas/ContextKind'
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ContextKind:
      type: string
      enum: [ Data, Database, KeycloakClient, Microfrontend, Microservice, Permission, Product, Slot, Parameter ]
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string